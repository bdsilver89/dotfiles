#!/usr/bin/env bash

# Inspired by ThePrimeagen's tmux-sessionizer and omerxx/tmux-sessionx
# 
# The simplicity of ThePrimeagen's tmux-sessionizer is nice, use fzf to create/open and folder
# in the search path as a tmux session.
# The additons from tmux-sessionx are:
#   - use fzf-tmux, this improves the view while already in a tmux window

TMUX_RUNNING=$(pgrep tmux)

DEFAULT_SEARCH_PATHS=(
  $HOME
  $HOME/Developer/projects
)

Z_MODE="off"
MINDEPTH=1
MAXDEPTH=1
FZF_DIR="-d"
FZF_OPTS=""

main() {
  while (( "$#" )); do
    case $1 in 
      -h|--help)
        echo "Usage: tmux-sessionizer [path] [options]"
        echo ""
        echo "A tmux tool to handle session creation and navigation"
        echo ""
        echo "Options:"
        echo "  PATH                Optional path to immediately open in a tmux session"
        echo "  -z,-zoxide          Enables zoxide fallback mode"
        echo "  -d,--max-depth NUM  Search a maximum of NUM folders deep"
        echo "  --min-depth NUM     Search a minimum NUM folders deep"
        echo "  -u,--up             Split fzf above"
        echo "  -d,--down           Split fzf below"
        echo "  -l,--left           Split fzf left"
        echo "  -r,--right          Split fzf right"
        echo "  -p,--popup          Split fzf in popup (requires tmux 3.2 or greater)"
        exit 0
        ;;
      -z|--zoxide)
        Z_MODE="on"
        shift
        ;;
      --min-depth)
        if [ -n "$2" ] && [ ${2:0:1} != "-" ]; then
          MINDEPTH=$2
          shift 2
        else
          echo "Argument for $1 is missing"
          exit 1
        fi
        ;;
      -d|--max-depth)
        if [ -n "$2" ] && [ ${2:0:1} != "-" ]; then
          MAXDEPTH=$2
          shift 2
        else
          echo "Argument for $1 is missing"
          exit 1
        fi
        ;;
      -u|--up)
        FZF_DIR="-u"
        shift
        ;;
      -d|--down)
        FZF_DIR="-d"
        shift
        ;;
      -l|--left)
        FZF_DIR="-l"
        shift
        ;;
      -r|--right)
        FZF_DIR="-r"
        shift
        ;;
      -p|--popup)
        FZF_DIR="-p"
        shift
        ;;
      -*|--*=)
        echo "Unknown option $1"
        exit 1
        ;;
      *)
        SELECTED_PATH="$1"
        shift
        ;;
    esac
  done
  
  # sanity check on these arguments
  if [[ $MINDEPTH -gt $MAXDEPTH ]]; then
    echo "Mindepth=$MINDEPTH is greater than Maxdepth=$MAXDEPTH, maybe try again?"
    exit 1
  fi

  FZF_OPTS="$FZF_DIR"

  # either use positional arg as the selection
  # or perform search and use that in fzf-tmux for the user to select
  if [[ -z $SELECTED_PATH ]]; then
    searches=$(find ${DEFAULT_SEARCH_PATHS[@]} -mindepth $MINDEPTH -maxdepth $MAXDEPTH -type d  2>/dev/null)
    selected=$(echo -e "${searches}" | fzf-tmux "${FZF_OPTS}")
  else 
    selected=$SELECTED_PATH
  fi

  if [[ -z $selected ]]; then
    exit 0
  fi

  selected_name=$(basename "$selected" | tr . _)

  # tmux is not currently running, either attach to an existing session or create a new one
  if [[ -z $TMUX ]] || [[ -z $TMUX_RUNNING ]]; then
    if tmux has-session -t=$selected_name 2>/dev/null; then
      tmux attach -t=$selected_name
    else
      tmux new-session -s $selected_name -c $selected
    fi
    exit 0
  fi

  # the selection does not match an existing session, so create it
  if ! tmux has-session -t=$selected_name 2>/dev/null; then
    tmux new-session -ds $selected_name -c $selected
  fi

  # switch to the selected session
  tmux switch-client -t $selected_name
}

main "$*"